{"version":3,"sources":["webpack://src/page/Auth/AuthPage.module.scss","webpack://node_modules/rfs/scss.scss","webpack://src/form/LoginForm/LoginForm.module.scss","webpack://src/component/Dashboard/EventItem/EventItem.module.scss","webpack://src/page/Dashboard/DashboardPage.module.scss","webpack://src/content/sass/abstracts/_mq.scss","webpack://src/component/Toolbar/Toolbar.module.scss","webpack://src/page/Dashboard/dialog/CreateEventDialog.module.scss","webpack://src/component/TableActions/TableActions.module.scss","webpack://src/component/Layout/Main/Main.module.scss","webpack://src/content/sass/base/_reset.scss","webpack://src/content/sass/base/_typography.scss","webpack://src/content/sass/common/_common.scss","webpack://src/content/sass/_theme.scss"],"names":[],"mappings":"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","file":"main.10ccda36.chunk.css","sourcesContent":["@import \"~rfs/sass\";\n$pre: \".authPage-\";\n\n#{$pre}container {\n    width: 100vw;\n    // height: 100%;\n    // display: flex;\n    // flex-direction: column;\n    // justify-content: center;\n\n    #{$pre}wrapper {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        #{$pre}changeFormLink {\n            @include rfs(1rem, margin-top);\n            cursor: pointer;\n            text-decoration: none;\n        }\n        #{$pre}copyright {\n            position: fixed;\n            bottom: 0;\n            width: 100%;\n            @include rfs(0.5rem, margin-top);\n            @include rfs(0.25rem, margin-bottom);\n        }\n    }\n}\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","$pre: \".loginForm-\";\n\n#{$pre}container {\n    width: 100%;\n}","$pre: \".event-item-\";\n\n#{$pre}container {\n    #{$pre}header {\n        #{$pre}subheader {\n            display: flex;\n            flex-direction: column;\n            #{$pre}row {\n                display: flex;\n                // width: 100%;\n                flex-direction: row;\n                justify-content: space-between;\n            }\n        }\n    }\n}\n","@import \"~rfs/scss\";\n@import \"../../content/sass/abstracts/mq\";\n$pre: \".dashboard-page-\";\n\n#{$pre}container {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    @include rfs(0.5rem, margin-left);\n    @include rfs(0.5rem, margin-right);\n    > div {\n        @include rfs(1rem, margin-bottom);\n        flex-basis: 100%;\n        @include mq($from: tablet) {\n            flex-basis: 50%;\n        }\n        @include mq($from: laptop) {\n            flex-basis: 33.3333%;\n        }\n    }\n}\n\n#{$pre}logo-wrapper {\n    margin: 0;\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    > img {\n        margin: 0;\n        width: 100%;\n        object-fit: cover;\n    }\n}\n\n#{$pre}date-wrapper {\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    @include mq($from: tablet) {\n        flex-direction: row;\n        justify-content: space-between;\n    }\n    svg {\n        @include rfs(0.5rem, margin-right);\n        fill: #888;\n        font-size: 1.25rem;\n    }\n    span {\n        font-size: 90%;\n        color: #666666;\n    }\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n@use \"sass:math\";\n\n// See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (mobile: 320px,\n    mobileLandscape: 480px,\n    tablet: 740px,\n    laptop: 968px,\n    desktop: 1280px,\n    wide: 1600px,\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size !=16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n\n    @if ($base-font-size !=16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    }\n\n    @else if unit($px)==em {\n        @return $px;\n    }\n\n    @return math.div($px, $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    }\n\n    @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq($from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint) {\n    $min-width  : 0;\n    $max-width  : 0;\n    $media-query: \"\";\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from)==number {\n            $min-width: mq-px2em($from);\n        }\n\n        @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until)==number {\n            $max-width: mq-px2em($until);\n        }\n\n        @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - 0.01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive==false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width           : mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if ($and==false and $min-width <=$target-width and ($until==false or $max-width >=$target-width) and $media-type !=\"print\"\n\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width !=0 {\n            $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n        }\n\n        @if $max-width !=0 {\n            $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n        }\n\n        @if $and {\n            $media-query: \"#{$media-query} and #{$and}\";\n        }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type==\"all\"and $media-query !=\"\") {\n            $media-type : \"\";\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less : ();\n    $equal: ();\n    $large: ();\n\n    @if length($list)>1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item==$seed) {\n                $equal: append($equal, $item);\n            }\n\n            @else if ($item < $seed) {\n                $less: append($less, $item);\n            }\n\n            @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted       : ();\n    $map-keys         : map-keys($map);\n    $map-values       : map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key  : nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted,\n                ($key: $value,\n                ));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width,\n        );\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #fcf8e3;\n        border-bottom   : 1px solid #fbeed5;\n        border-left     : 1px solid #fbeed5;\n        color           : #c09853;\n        font            : small-caption;\n        padding         : 3px 6px;\n        pointer-events  : none;\n        position        : fixed;\n        right           : 0;\n        top             : 0;\n        z-index         : 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}","@import \"~rfs/scss\";\n\n$pre: \".toolbar-\";\n\n#{$pre}container {\n    height: max-content;\n    // background-color: #fff;\n    // border-radius: 4px;\n    // box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    //     0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n    color: rgba(0, 0, 0, 0.87);\n    @include rfs(0.5rem, margin-left);\n    @include rfs(0.5rem, margin-right);\n    @include rfs(1rem, margin-bottom);\n    #{$pre}wrapper {\n        display: flex;\n        flex-direction: row;\n        // @include rfs(1rem, padding-left);\n        // @include rfs(1rem, padding-right);\n        @include rfs(0.5rem, padding-top);\n        @include rfs(0.5rem, padding-bottom);\n    }\n}\n","@import \"../../../content/sass/abstracts/mq\";\n\n$pre: \".create-event-dialog-\";\n\n#{$pre}container {\n    > div {\n        > div {\n            @include mq($from: tablet) {\n                width: 85%;\n                max-width: 1000px;\n            }\n            @include mq($from: laptop) {\n                width: 75%;\n                max-width: 1000px;\n            }\n        }\n    }\n}\n","$pre: \".table-actions-\";\n\n#{$pre}container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n\n    #{$pre}edit-icon {\n        fill:#1976d2;\n    }\n\n    #{$pre}delete-icon {\n        fill: #d32f2f;\n    }\n\n    #{$pre}link-icon {\n        fill: #a3a3a3;\n    }\n}\n","@import \"~rfs/scss\";\n\n$pre: \".main-\";\n\n#{$pre}container {\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    max-width: 1280px;\n    min-height: calc(100vh - 64px - 2rem);\n    margin-top: 64px;\n    @include rfs(1rem, padding-top);\n    @include rfs(1rem, padding-bottom);\n}\n","html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin        : 0;\n    padding       : 0;\n    border        : 0;\n    font-size     : 100%;\n    vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\n\nhtml {\n    overflow-y: scroll;\n}\n\nbody {\n    line-height: 1;\n}\n\nstrong {\n    font-weight: bold;\n}\n\nol,\nul {\n    list-style: none;\n}\n\nblockquote,\nq {\n    quotes: none;\n\n    &:before,\n    &:after {\n        content: \"\";\n        content: none;\n    }\n}\n\ntable {\n    border-collapse: separate;\n    border-spacing : 0;\n    font-size      : inherit;\n    font           : 100%;\n\n    th {\n        font-weight   : bold;\n        vertical-align: bottom;\n    }\n\n    td {\n        font-weight   : normal;\n        vertical-align: top;\n\n        img {\n            vertical-align: top;\n        }\n    }\n}\n\na {\n    margin         : 0;\n    padding        : 0;\n    font-size      : 100%;\n    vertical-align : baseline;\n    background     : transparent;\n    color          : inherit;\n    text-decoration: none;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title],\ndfn[title] {\n    border-bottom: 0.05rem dotted #000;\n    cursor       : help;\n}\n\nhr {\n    display   : block;\n    height    : 0.05rem;\n    border    : 0;\n    border-top: 0.05rem solid #dadada;\n    margin    : 1rem 0;\n    padding   : 0;\n}\n\ninput,\nselect {\n    vertical-align: middle;\n}\n\npre {\n    white-space: pre;\n    white-space: pre-wrap;\n    white-space: pre-line;\n    word-wrap  : break-word;\n}\n\ninput[type=\"radio\"] {\n    vertical-align: text-bottom;\n}\n\ninput[type=\"checkbox\"] {\n    vertical-align: bottom;\n}\n\n.ie7 input[type=\"checkbox\"] {\n    vertical-align: baseline;\n}\n\n.ie6 input {\n    vertical-align: text-bottom;\n}\n\nselect,\ninput,\ntextarea {\n    font: 99% sans-serif;\n}\n\nsub,\nsup {\n    font-size  : 75%;\n    line-height: 0;\n    position   : relative;\n}\n\nsup {\n    top: -0.5em;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\npre,\ncode,\nkbd,\nsamp {\n    font-family: monospace, sans-serif;\n}\n\n.clickable,\nlabel,\ninput[type=\"button\"],\ninput[type=\"submit\"],\ninput[type=\"file\"],\nbutton {\n    cursor: pointer;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n    margin: 0;\n}\n\nbutton,\ninput[type=\"button\"] {\n    width   : auto;\n    overflow: visible;\n}\n\n.ie7 img {\n    -ms-interpolation-mode: bicubic;\n}\n\n.clearfix:after {\n    content: \" \";\n    display: block;\n    clear  : both;\n}","@import \"~rfs/scss\";\n\n// @font-face {\n//     font-family: Tangiang;\n//     font-weight: 400;\n//     font-style : normal;\n//     src        : url(\"../../font/tangiang.woff2\") format(\"woff2\"),\n//         url(\"../../font/tangiang.woff\") format(\"woff\"),\n//         url(\"../../font/tangiang.ttf\") format(\"truetype\"),\n//         url(\"../../font/tangiang.eot?#iefix\") format(\"embedded-opentype\");\n//     font-display: swap;\n// }\n\n// @font-face {\n//     font-family: Roboto Light;\n//     font-weight: 400;\n//     font-style : normal;\n//     src        : url(\"../../font/Roboto-Light.woff2\") format(\"woff2\"),\n//         url(\"../../font/Roboto-Light.woff\") format(\"woff\"),\n//         url(\"../../font/Roboto-Light.ttf\") format(\"truetype\"),\n//         url(\"../../font/Roboto-Light.eot?#iefix\") format(\"embedded-opentype\");\n//     font-display: swap;\n// }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 p,\nspan {\n    margin        : 0;\n    padding       : 0;\n    color         : inherit;\n    text-rendering: optimizeLegibility;\n    word-break    : break-word;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    //font-family: 'Tangiang', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: 700;\n    // @include rfs(32px, line-height);\n    @include rfs(0.02rem, letter-spacing);\n}\n\nh1 {\n    @include font-size(62px);\n    @include rfs(72px, line-height);\n}\n\nh2 {\n    @include font-size(2.225rem);\n    @include rfs(36px, line-height);\n}\n\nh3 {\n    @include font-size(2rem)\n}\n\nh4 {\n    @include font-size(1.75rem);\n}\n\nh5 {\n    @include font-size(1.5rem);\n}\n\nh6 {\n    @include font-size(1.25rem);\n}\n\np,\nspan {\n    //font-family: 'Roboto Light', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-weight: normal;\n    @include rfs(32px, line-height);\n    @include rfs(0.02rem, letter-spacing);\n}\n\np {\n    @include font-size(18px);\n    @include rfs(32px, line-height);\n    @include rfs(0.02rem, letter-spacing);\n    margin: 0;\n    @include rfs(24px, margin-bottom);\n}\n\nspan {\n    @include font-size(1rem);\n    @include rfs(1.5rem, line-height);\n    @include rfs(0.01rem, letter-spacing);\n}\n\na {\n    text-decoration: none;\n    word-break     : break-word;\n    color          : darkorange;\n    transition     : all .25s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n    &:hover {\n        // text-decoration: underline;\n        color     : orange;\n        transition: all .25s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n    }\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    //font-family: 'Roboto Light', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}","@import \"~rfs/scss\";\n\n.form-row {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n    @include mq($from: tablet) {\n        flex-direction: row;\n        justify-content: space-between;\n        > div:nth-of-type(2n) {\n            @include rfs(0.5rem, margin-left);\n        }\n        > div:nth-of-type(2n + 1) {\n            @include rfs(0.5rem, margin-right);\n        }\n    }\n}\n\n.form-column {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.flex-row {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.flex-column {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.category-chip {\n    border: 1px solid rgb(138, 29, 29);\n    border-radius: 3px;\n    background: rgba(161, 39, 39, 0.75);\n    color: #fff;\n    padding: 0.1rem 0.25rem;\n    width: max-content;\n}\n","@charset \"UTF-8\";\n@import \"abstracts/variables\";\n@import \"abstracts/mq\";\n\n@import \"base/reset\";\n@import \"base/typography\";\n@import \"common/common\";\n\nhtml {\n    -ms-text-size-adjust    : 100%;\n    -webkit-text-size-adjust: 100%;\n    font                    : 112.5%/1.45em georgia, serif, sans-serif;\n    box-sizing              : border-box;\n    overflow-y              : scroll;\n    background-color        : #fafafa;\n}\n\nbody {\n    margin                       : 0;\n    -webkit-font-smoothing       : antialiased;\n    -moz-osx-font-smoothing      : grayscale;\n    color                        : hsla(0, 0%, 0%, 0.8);\n    font-family                  : georgia, serif;\n    font-weight                  : normal;\n    word-wrap                    : break-word;\n    font-kerning                 : normal;\n    -moz-font-feature-settings   : \"kern\", \"liga\", \"clig\", \"calt\";\n    -ms-font-feature-settings    : \"kern\", \"liga\", \"clig\", \"calt\";\n    -webkit-font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\";\n    font-feature-settings        : \"kern\", \"liga\", \"clig\", \"calt\";\n}\n\n#root {\n    min-height: 100vh;\n    height    : 100vh;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n    display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n    display: inline-block;\n}\n\naudio:not([controls]) {\n    display: none;\n    height : 0;\n}\n\nprogress {\n    vertical-align: baseline;\n}\n\n[hidden],\ntemplate {\n    display: none;\n}\n\na {\n    background-color            : transparent;\n    -webkit-text-decoration-skip: objects;\n}\n\na:active,\na:hover {\n    outline-width: 0;\n}\n\nabbr[title] {\n    border-bottom  : 1px dotted hsla(0, 0%, 0%, 0.5);\n    cursor         : help;\n    text-decoration: none;\n}\n\nb,\nstrong {\n    font-weight: inherit;\n    font-weight: bolder;\n}\n\ndfn {\n    font-style: italic;\n}\n\nmark {\n    background-color: #ff0;\n    color           : #000;\n}\n\nsmall {\n    font-size: 80%;\n}\n\nsub,\nsup {\n    font-size     : 75%;\n    line-height   : 0;\n    position      : relative;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25em;\n}\n\nsup {\n    top: -0.5em;\n}\n\nimg {\n    border-style  : none;\n    max-width     : 100%;\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nsvg:not(:root) {\n    overflow: hidden;\n}\n\ncode,\nkbd,\npre,\nsamp {\n    font-family: monospace;\n    font-size  : 1em;\n}\n\nfigure {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nhr {\n    box-sizing    : content-box;\n    overflow      : visible;\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : calc(1.45rem - 1px);\n    background    : hsla(0, 0%, 0%, 0.2);\n    border        : none;\n    height        : 1px;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    // font  : inherit;\n    margin: 0;\n}\n\noptgroup {\n    font-weight: 700;\n}\n\nbutton,\ninput {\n    overflow: visible;\n}\n\nbutton,\nselect {\n    text-transform: none;\n}\n\n[type=\"reset\"],\n[type=\"submit\"],\nbutton,\nhtml [type=\"button\"] {\n    -webkit-appearance: button;\n}\n\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner,\nbutton::-moz-focus-inner {\n    border-style: none;\n    padding     : 0;\n}\n\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring,\nbutton:-moz-focusring {\n    outline: 1px dotted ButtonText;\n}\n\nfieldset {\n    border        : 1px solid silver;\n    padding       : 0.35em 0.625em 0.75em;\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nlegend {\n    box-sizing : border-box;\n    color      : inherit;\n    display    : table;\n    max-width  : 100%;\n    padding    : 0;\n    white-space: normal;\n}\n\ntextarea {\n    overflow: auto;\n}\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n    box-sizing: border-box;\n    padding   : 0;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n[type=\"search\"] {\n    -webkit-appearance: textfield;\n    outline-offset    : -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n::-webkit-input-placeholder {\n    color  : inherit;\n    opacity: 0.54;\n}\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font              : inherit;\n}\n\n* {\n    box-sizing: inherit;\n}\n\n*:before {\n    box-sizing: inherit;\n}\n\n*:after {\n    box-sizing: inherit;\n}\n\nhgroup {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nul {\n    margin-left        : 1.45rem;\n    margin-right       : 0;\n    margin-top         : 0;\n    padding-bottom     : 0;\n    padding-left       : 0;\n    padding-right      : 0;\n    padding-top        : 0;\n    margin-bottom      : 1.45rem;\n    list-style-position: outside;\n    list-style-image   : none;\n}\n\nol {\n    margin-left        : 1.45rem;\n    margin-right       : 0;\n    margin-top         : 0;\n    padding-bottom     : 0;\n    padding-left       : 0;\n    padding-right      : 0;\n    padding-top        : 0;\n    margin-bottom      : 1.45rem;\n    list-style-position: outside;\n    list-style-image   : none;\n}\n\ndl {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\ndd {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\np {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\npre {\n    margin-left  : 0;\n    margin-right : 0;\n    margin-top   : 0;\n    margin-bottom: 1.45rem;\n    font-size    : 0.85rem;\n    line-height  : 1.42;\n    background   : hsla(0, 0%, 0%, 0.04);\n    border-radius: 3px;\n    overflow     : auto;\n    word-wrap    : normal;\n    padding      : 1.45rem;\n}\n\ntable {\n    margin-left    : 0;\n    margin-right   : 0;\n    margin-top     : 0;\n    padding-bottom : 0;\n    padding-left   : 0;\n    padding-right  : 0;\n    padding-top    : 0;\n    margin-bottom  : 1.45rem;\n    font-size      : 1rem;\n    line-height    : 1.45rem;\n    border-collapse: collapse;\n    width          : 100%;\n}\n\nblockquote {\n    margin-left   : 1.45rem;\n    margin-right  : 1.45rem;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nform {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nnoscript {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\niframe {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\naddress {\n    margin-left   : 0;\n    margin-right  : 0;\n    margin-top    : 0;\n    padding-bottom: 0;\n    padding-left  : 0;\n    padding-right : 0;\n    padding-top   : 0;\n    margin-bottom : 1.45rem;\n}\n\nb {\n    font-weight: bold;\n}\n\nstrong {\n    font-weight: bold;\n}\n\ndt {\n    font-weight: bold;\n}\n\nth {\n    font-weight: bold;\n}\n\nli {\n    margin-bottom: calc(1.45rem / 2);\n}\n\nol li {\n    padding-left: 0;\n}\n\nul li {\n    padding-left: 0;\n}\n\nli>ol {\n    margin-left  : 1.45rem;\n    margin-bottom: calc(1.45rem / 2);\n    margin-top   : calc(1.45rem / 2);\n}\n\nli>ul {\n    margin-left  : 1.45rem;\n    margin-bottom: calc(1.45rem / 2);\n    margin-top   : calc(1.45rem / 2);\n}\n\nblockquote *:last-child {\n    margin-bottom: 0;\n}\n\nli *:last-child {\n    margin-bottom: 0;\n}\n\np *:last-child {\n    margin-bottom: 0;\n}\n\nli>p {\n    margin-bottom: calc(1.45rem / 2);\n}\n\ncode {\n    font-size  : 0.85rem;\n    line-height: 1.45rem;\n}\n\nkbd {\n    font-size  : 0.85rem;\n    line-height: 1.45rem;\n}\n\nsamp {\n    font-size  : 0.85rem;\n    line-height: 1.45rem;\n}\n\nabbr {\n    border-bottom: 1px dotted hsla(0, 0%, 0%, 0.5);\n    cursor       : help;\n}\n\nacronym {\n    border-bottom: 1px dotted hsla(0, 0%, 0%, 0.5);\n    cursor       : help;\n}\n\nthead {\n    text-align: left;\n}\n\ntd,\nth {\n    text-align                   : left;\n    border-bottom                : 1px solid hsla(0, 0%, 0%, 0.12);\n    font-feature-settings        : \"tnum\";\n    -moz-font-feature-settings   : \"tnum\";\n    -ms-font-feature-settings    : \"tnum\";\n    -webkit-font-feature-settings: \"tnum\";\n    padding-left                 : 0.96667rem;\n    padding-right                : 0.96667rem;\n    padding-top                  : 0.725rem;\n    padding-bottom               : calc(0.725rem - 1px);\n}\n\nth:first-child,\ntd:first-child {\n    padding-left: 0;\n}\n\nth:last-child,\ntd:last-child {\n    padding-right: 0;\n}\n\ntt,\ncode {\n    background-color: hsla(0, 0%, 0%, 0.04);\n    border-radius   : 3px;\n    font-family     : \"SFMono-Regular\", Consolas, \"Roboto Mono\", \"Droid Sans Mono\", \"Liberation Mono\", Menlo, Courier,\n        monospace;\n    padding       : 0;\n    padding-top   : 0.2em;\n    padding-bottom: 0.2em;\n}\n\npre code {\n    background : none;\n    line-height: 1.42;\n}\n\ncode:before,\ncode:after,\ntt:before,\ntt:after {\n    letter-spacing: -0.2em;\n    content       : \" \";\n}\n\npre code:before,\npre code:after,\npre tt:before,\npre tt:after {\n    content: \"\";\n}\n\n@media only screen and (max-width: 480px) {\n    html {\n        font-size: 100%;\n    }\n}"]}